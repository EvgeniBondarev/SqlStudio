@model SlqStudio.DTO.ReportDto

<div class="container">
    <h2>Отчет по лабораторным работам</h2>
    <h4>@Model.User.Name</h4>
    <p>@Model.User.Email</p>

    @foreach (var lab in Model.LabWorks)
    {
        <h3>@lab.Name</h3>
        <p><strong>Курс:</strong> @lab.Course?.Name</p>

        <table class="table table-bordered">
            <thead>
            <tr>
                <th>№ Задачи</th>
                <th>Название</th>
                <th>Решение</th>
                <th>Статус</th>
            </tr>
            </thead>
            <tbody>
            @foreach (var task in lab.Tasks)
            {
                var status = Model.Solutions.FirstOrDefault(s => s.TaskId == task.Id)?.IsSuccess == true ? "✅ Выполнено" : "❌ Не выполнено";
                string rowClass =  Model.Solutions.FirstOrDefault(s => s.TaskId == task.Id)?.IsSuccess == true ? "table-success" : "table-danger";
                string userSolution = Model.Solutions.FirstOrDefault(s => s.TaskId == task.Id)?.UserSolutionText ?? "Решение отсутствует";
                string shortSolution = userSolution.Length > 20 ? userSolution.Substring(0, 20) + "..." : userSolution;
                
                <tr class="@rowClass">
                    <td>@task.Number</td>
                    <td onclick="window.location.href='@Url.Action("Index", "Solution", new { taskId = task.Id })'" style="cursor:pointer;" >@task.Title</td>
                    <td onclick="showSolutionModal('@task.Id', @Html.Raw(userSolution.Replace("\n", "\\n").Replace("\r", "")))" style="cursor:pointer;">
                        @shortSolution
                    </td>
                    <td>@status</td>
                </tr>
            }
            </tbody>
        </table>

        <hr /> 
    }

    <form asp-action="SubmitReport" asp-controller="Report" method="post">
        <input type="hidden" name="User.Email" value="@Model.User.Email" />
        <input type="hidden" name="User.Name" value="@Model.User.Name" />

        @for (int i = 0; i < Model.LabWorks.Count; i++)
        {
            var lab = Model.LabWorks[i];
            <input type="hidden" name="LabWorks[@i].Id" value="@lab.Id" />
            <input type="hidden" name="LabWorks[@i].Name" value="@lab.Name" />
            <input type="hidden" name="LabWorks[@i].Description" value="@lab.Description" />
            <input type="hidden" name="LabWorks[@i].Number" value="@lab.Number" />
            <input type="hidden" name="LabWorks[@i].CourseId" value="@lab.CourseId" />

            @for (int j = 0; j < lab.Tasks.Count; j++)
            {
                var task = lab.Tasks.ToList()[j];
                <input type="hidden" name="LabWorks[@i].Tasks[@j].Id" value="@task.Id" />
                <input type="hidden" name="LabWorks[@i].Tasks[@j].Title" value="@task.Title" />
                <input type="hidden" name="LabWorks[@i].Tasks[@j].Number" value="@task.Number" />
            }
        }

        @for (int k = 0; k < Model.Solutions.Count; k++)
        {
            var solution = Model.Solutions[k];
            <input type="hidden" name="Solutions[@k].TaskId" value="@solution.TaskId" />
            <input type="hidden" name="Solutions[@k].IsSuccess" value="@solution.IsSuccess" />
            <input type="hidden" name="Solutions[@k].UserSolutionText" value="@solution.UserSolutionText" />
        }

        <button type="submit" class="btn btn-primary">Отправить отчет</button>
    </form>
    
</div>

<!-- Подключение стилей и скриптов CodeMirror -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.65.5/codemirror.min.css">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.65.5/theme/eclipse.min.css">
<script src="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.65.5/codemirror.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.65.5/mode/sql/sql.min.js"></script>

<!-- HTML-разметка всплывающего окна -->
<div id="solutionModal" class="modal" style="display: none; position: fixed; z-index: 1000; left: 0; top: 0; width: 100%; height: 100%; background-color: rgba(0,0,0,0.5);">
    <div class="modal-content" style="background: white; width: 50%; margin: 10% auto; padding: 20px; border-radius: 8px; position: relative;">
        <span onclick="closeSolutionModal()" style="position: absolute; top: 10px; right: 15px; font-size: 20px; cursor: pointer;">&times;</span>
        <h3>Полное решение</h3>
        <textarea id="sqlSolutionArea"></textarea>
    </div>
</div>

<script>
    let editor;

    function showSolutionModal(taskId, solutionText) {
        document.getElementById("solutionModal").style.display = "block";

        let textarea = document.getElementById("sqlSolutionArea");
        textarea.value = solutionText;

        if (!editor) {
            editor = CodeMirror.fromTextArea(textarea, {
                mode: "text/x-sql",
                lineNumbers: true,
                theme: "eclipse",
                readOnly: true
            });
        } else {
            editor.setValue(solutionText);
        }
    }

    function closeSolutionModal() {
        document.getElementById("solutionModal").style.display = "none";
    }
</script>