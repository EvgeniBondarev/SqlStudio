@model SlqStudio.ViewModels.Auth.LoginRequest

@{
    Layout = null;
    ViewData["Title"] = "Авторизация";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - SlqStudio</title>

    <!-- Materialize CSS -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0/css/materialize.min.css">
    <!-- Material Icons -->
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
    <style>
        body {
            display: flex;
            min-height: 100vh;
            flex-direction: column;
            background-color: #f5f5f5;
        }
        main {
            flex: 1 0 auto;
            display: flex;
            align-items: center;
            justify-content: center;
        }
        .auth-card {
            width: 100%;
            max-width: 500px;
            margin: 0 auto;
        }
        .brand-logo {
            font-weight: 500;
            text-align: center;
            width: 100%;
            display: block;
            margin-bottom: 30px;
            font-size: 2.5rem;
            color: #01579b;
        }
        .config-btn {
            position: absolute;
            bottom: 20px;
            right: 20px;
            background-color: #039be5;
            border-radius: 50%;
            padding: 10px;
            display: flex;
            justify-content: center;
            align-items: center;
            width: 50px;
            height: 50px;
        }
        .config-btn i {
            color: white;
            font-size: 24px;
        }
        .custom-radio-group {
            margin-left: 0;
            max-height: 200px;
            overflow-y: auto;
            padding: 0;
        }

        .custom-radio-group p {
            margin: 8px 0;
        }

        [type="radio"].with-gap:checked + span:before {
            border: 2px solid #0288d1;
        }

        [type="radio"].with-gap:checked + span:after {
            background-color: #0288d1;
            border: 2px solid #0288d1;
        }

        .btn {
            margin-left: 10px;
        }

        /* Новые стили для выравнивания полей */
        .input-container {
            position: relative;
            margin-top: 1.5rem;
            margin-bottom: 1.5rem;
        }
        .input-container .prefix {
            position: absolute;
            width: 3rem;
            font-size: 2rem;
            transition: color .2s;
            top: 0.5rem;
            color: #9e9e9e;
        }
        .input-container .prefix.active {
            color: #0288d1;
        }
        .input-field {
            padding-left: 3rem;
            margin-top: 0;
        }
        .radio-options {
            margin-top: -5px;
        }
        .input-field label {
            left: 3rem;
        }
        .input-field label:not(.active) {
            transform: translateY(0) !important;
        }
        /* Стили для валидации */
        .error-message {
            color: #f44336;
            font-size: 0.8rem;
            margin-left: 3rem;
            display: none;
        }
        .invalid {
            color: #f44336 !important;
        }
        .auth-error {
            color: #f44336;
            padding: 10px;
            margin: 15px 0;
            border-radius: 4px;
            background-color: #ffebee;
            text-align: center;
        }
        .hidden {
            display: none;
        }
    </style>
</head>
<body>
<main>
    <div class="container">
        <div class="auth-card">
            <span class="brand-logo">SlqStudio</span>

            <div class="card">
                <div class="card-content">
                    <span class="card-title center-align">Авторизация</span>

                    <!-- Блок для отображения ошибок -->
                    <div class="auth-error @(TempData["ErrorMessage"] == null ? "hidden" : "")">
                        @if (TempData["ErrorMessage"] != null)
                        {
                            <i class="material-icons" style="vertical-align: middle;">error</i>
                            @TempData["ErrorMessage"]
                        }
                    </div>

                    <form method="post" id="authForm">
                        @Html.AntiForgeryToken()

                        <!-- Скрытое поле для returnUrl -->
                        @if (ViewBag.ReturnUrl != null)
                        {
                            <input type="hidden" name="returnUrl" value="@ViewBag.ReturnUrl" />
                        }

                        <!-- Поле Email -->
                        <div class="row">
                            <div class="col s12 input-container">
                                <i class="material-icons prefix">email</i>
                                <div class="input-field">
                                    <input id="email" type="email" class="validate" name="Email" required
                                           value="@Model?.Email">
                                    <label for="email">Email</label>
                                    <span class="error-message">Пожалуйста, введите email</span>
                                </div>
                            </div>
                        </div>

                        <!-- Поле Курс -->
                        <div class="row">
                            <div class="col s12 input-container">
                                <i class="material-icons prefix">school</i>
                                <div class="input-field">
                                    <label class="active">Курс</label><br/>
                                    <div class="radio-options">
                                        <div class="custom-radio-group scrollable-radio-group" id="courseGroup">
                                            @foreach (var item in (SelectList)ViewBag.Courses)
                                            {
                                                <p>
                                                    <label>
                                                        <input type="radio" name="Course" value="@item.Value"
                                                               class="with-gap" required
                                                               @(Model?.Course == item.Value ? "checked" : "")>
                                                        <span>@item.Text</span>
                                                    </label>
                                                </p>
                                            }
                                        </div>
                                        <span class="error-message">Пожалуйста, выберите курс</span>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="row center-align">
                            <button type="submit" class="btn waves-effect waves-light light-blue darken-3">
                                <i class="material-icons left">login</i>Войти
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</main>

<!-- Scripts -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0/js/materialize.min.js"></script>
<script>
    $(document).ready(function() {
        // Инициализация Materialize компонентов
        M.updateTextFields();

        // Валидация формы
        $('#authForm').on('submit', function(e) {
            let isValid = true;

            // Проверка email
            const email = $('#email').val();
            if (!email) {
                $('#email').nextAll('.error-message').show();
                $('#email').closest('.input-container').find('.prefix').addClass('invalid');
                isValid = false;
            } else {
                $('#email').nextAll('.error-message').hide();
                $('#email').closest('.input-container').find('.prefix').removeClass('invalid');
            }

            // Проверка выбора курса
            const courseSelected = $('input[name="Course"]:checked').length > 0;
            if (!courseSelected) {
                $('#courseGroup').nextAll('.error-message').show();
                $('.input-container:nth-child(2) .prefix').addClass('invalid');
                isValid = false;
            } else {
                $('#courseGroup').nextAll('.error-message').hide();
                $('.input-container:nth-child(2) .prefix').removeClass('invalid');
            }

            if (!isValid) {
                e.preventDefault();
                return false;
            }
        });

        // Подсветка иконки при фокусе
        $('input').focus(function() {
            $(this).closest('.input-container').find('.prefix').addClass('active');
        }).blur(function() {
            if (!$(this).val()) {
                $(this).closest('.input-container').find('.prefix').removeClass('active');
            }
        });

        // Подсветка иконки курса при выборе
        $('input[type="radio"][name="Course"]').change(function() {
            $('.input-container:nth-child(2) .prefix').addClass('active');
            $(this).closest('.custom-radio-group').nextAll('.error-message').hide();
            $('.input-container:nth-child(2) .prefix').removeClass('invalid');
        });

        // Показываем сохраненные значения при повторной отправке формы
        @if (Model != null)
        {
            <text>
                if ($('#email').val()) {
                    $('#email').closest('.input-container').find('.prefix').addClass('active');
                }
            </text>
        }
    });
</script>
</body>
</html>