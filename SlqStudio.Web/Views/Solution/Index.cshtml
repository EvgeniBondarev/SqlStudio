@model SlqStudio.ViewModel.Models.LabTaskViewModel
@{
Layout = "_Layout";
}

<!-- Подключение CodeMirror -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.65.5/codemirror.min.css">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.65.5/theme/material.min.css">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.65.5/addon/hint/show-hint.min.css">

<style>
    /* Основные стили */
    body {
        display: flex;
        min-height: 100vh;
        flex-direction: column;
        background-color: #f5f5f5;
        margin: 0;
        padding: 0;
        overflow: hidden;
    }

    main {
        flex: 1;
        padding: 20px 0;
        height: calc(100vh - 64px); /* Высота с учетом шапки */
        overflow: hidden;
    }

    .container {
        width: 95%;
        max-width: 1400px;
        height: 100%;
    }

    /* Выравнивание высоты блоков */
    .row-equal-height {
        display: flex;
        flex-wrap: wrap;
        height: 100%;
        margin-bottom: 0;
    }

    .row-equal-height > [class*="col"] {
        display: flex;
        flex-direction: column;
        height: 100%;
    }

    /* Стили для карточек */
    .task-card, .editor-card {
        flex: 1;
        display: flex;
        flex-direction: column;
        margin: 0;
        height: 100%;
        overflow: hidden;
    }

    .task-card .card-content {
        padding: 24px;
        flex: 1;
        display: flex;
        flex-direction: column;
        overflow: hidden;
    }

    .task-content {
        flex: 1;
        overflow-y: auto;
        padding-right: 10px;
        margin-top: 10px;
        max-height: calc(100% - 40px); /* Добавлено для ограничения высоты */
    }

    /* Стили для редактора и результатов */
    .editor-results-container {
        flex: 1;
        display: flex;
        flex-direction: column;
        height: 100%;
        overflow: hidden;
    }

    .editor-section {
        flex: 0 0 auto;
        margin-bottom: 20px;
        max-height: 400px; /* Добавлено для ограничения высоты */
        overflow-y: auto; /* Добавлено для прокрутки */
    }

    .results-section {
        flex: 1;
        overflow-y: auto;
        padding-right: 10px;
        max-height: calc(100% - 420px); /* Добавлено для ограничения высоты */
    }

    .CodeMirror {
        height: 300px;
        border: 1px solid #e0e0e0;
        border-radius: 4px;
        font-size: 14px;
    }

    /* Стили для таблиц */
    .result-table {
        margin-bottom: 20px;
    }

    /* Скроллбар */
    ::-webkit-scrollbar {
        width: 8px;
        height: 8px;
    }

    ::-webkit-scrollbar-thumb {
        background-color: #90a4ae;
        border-radius: 4px;
    }

    ::-webkit-scrollbar-track {
        background-color: #f1f1f1;
    }

    /* Фикс для Materialize */
    .card .card-content {
        padding: 24px;
    }

    .card-content {
        overflow-x: auto;
    }

    .card-action {
        flex: 0 0 auto;
    }
    /* Уведомления */
    .alert-container {
        position: fixed;
        top: 20px;
        left: 50%;
        transform: translateX(-50%);
        z-index: 1000;
        width: 80%;
        max-width: 600px;
    }

    .alert {
        padding: 15px;
        margin-bottom: 20px;
        border-radius: 4px;
        font-size: 14px;
        display: flex;
        justify-content: space-between;
        align-items: center;
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    }

    .alert-success {
        background-color: #d4edda;
        color: #155724;
    }

    .alert-error {
        background-color: #f8d7da;
        color: #721c24;
    }

    .alert-close {
        cursor: pointer;
        font-size: 18px;
        margin-left: 10px;
    }
</style>

<!-- Модальное окно для диаграммы -->
<div id="diagram-modal" class="modal modal-fixed-footer" style="width: 50%; height: 90%; max-height: 90%;">
    <div class="modal-content">
        <h4>ER-диаграмма базы данных</h4>
        <div class="mermaid">
            @Model.DatabaseDiagram
        </div>
    </div>
    <div class="modal-footer">
        <a href="#!" class="modal-close waves-effect waves-green btn-flat">Закрыть</a>
    </div>
</div>


<main>
    <div class="container">
        <div id="alert-container"></div>

        <div class="row row-equal-height">
            <!-- Блок с заданием -->
            <div class="col s12 m12 l4">
                <div class="card task-card">
                    <div class="card-content">
                        <span class="card-title">@Model.Title</span>
                        <div class="task-content markdown-body">
                            @Html.Raw(Model.Condition)
                        </div>
                        <button id="show-diagram-btn" class="btn waves-effect waves-light blue">
                            <i class="material-icons left">schema</i>Показать диаграмму БД
                        </button>
                    </div>
                </div>
            </div>

            <!-- Блок с редактором и результатами -->
            <div class="col s12 m12 l8">
                <div class="card editor-card">
                    <div class="card-content" style="padding-bottom: 0;">
                        <div class="editor-results-container">
                            <!-- Редактор SQL -->
                            <div class="editor-section">
                                <h5>SQL Редактор</h5>
                                <textarea id="sqlScript">
CREATE FUNCTION dbo.GetLabCount()
RETURNS TABLE
AS
RETURN
(
    SELECT COUNT(*) AS LabCount
    FROM Labs
);
GO
SELECT * FROM dbo.GetLabCount();
    </textarea>

                                <div class="buttons-container" style="display: flex; justify-content: space-between; margin-top: 15px;">
                                    <button id="run-query" class="btn waves-effect waves-light blue" lab-id="@Model.Id">
                                        <i class="material-icons left">play_arrow</i>Запустить
                                    </button>

                                    <a asp-area="" asp-action="DetailsByWork" asp-controller="LabTasks" asp-route-id="@Model.LabWorkId" class="btn waves-effect waves-light blue">
                                        <i class="material-icons left">arrow_back</i>Закончить
                                    </a>
                                </div>
                            </div>

                            <!-- Результаты -->
                            <div class="results-section">
                                <div id="query-result" class="result-table">
                                    <h5>Результат:</h5>
                                    <div class="responsive-table">
                                        <table class="highlight">
                                            <thead>
                                            <tr>
                                                <th>ProductID</th>
                                                <th>ProductName</th>
                                                <th>Category</th>
                                                <th>Price</th>
                                                <th>StockQuantity</th>
                                            </tr>
                                            </thead>
                                            <tbody>
                                            <tr>
                                                <td>1</td>
                                                <td>Smartphone</td>
                                                <td>Электроника</td>
                                                <td>1200</td>
                                                <td>15</td>
                                            </tr>
                                            </tbody>
                                        </table>
                                    </div>
                                </div>

                                <div id="expected-result" class="result-table">
                                    @if (Model.QueryData != null && Model.QueryData.Any())
                                    {
                                    <h5>Ожидаемый результат:</h5>
                                    <div class="responsive-table">
                                        <table class="highlight">
                                            <thead>
                                            <tr>
                                                @foreach (var column in Model.QueryData.First().Keys)
                                                {
                                                <th>@column</th>
                                                }
                                            </tr>
                                            </thead>
                                            <tbody>
                                            @foreach (var row in Model.QueryData)
                                            {
                                            <tr>
                                                @foreach (var value in row.Values)
                                                {
                                                <td>@value</td>
                                                }
                                            </tr>
                                            }
                                            </tbody>
                                        </table>
                                    </div>
                                    }
                                    else
                                    {
                                    <p>Нет данных для отображения.</p>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</main>

@section Scripts {
<script src="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.65.5/codemirror.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.65.5/mode/sql/sql.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.65.5/addon/hint/show-hint.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.65.5/addon/hint/sql-hint.min.js"></script>

<script>
    // Инициализация CodeMirror
    var editor = CodeMirror.fromTextArea(document.getElementById("sqlScript"), {
        mode: "text/x-sql",
        lineNumbers: true,
        theme: "material",
        extraKeys: {
            "Tab": function(cm) {
                if (cm.state.completionActive) {
                    cm.state.completionActive.widget.pick();
                } else {
                    cm.showHint({ completeSingle: false });
                }
            }
        },
        hintOptions: {
            tables: {
                "Products": ["ProductID", "ProductName", "Category", "Price", "StockQuantity"],
                "Orders": ["OrderID", "ProductID", "Quantity", "OrderDate", "CustomerID"]
            }
        }
    });

    // Обработчик кнопки "Запустить"
    document.getElementById('run-query').addEventListener('click', function() {
        var query = editor.getValue();
        var taskId = this.getAttribute('lab-id');

        // Показываем индикатор загрузки
        showAlertMessage('info', 'Выполнение запроса...');

        fetch("/Solution/ValidateSqlSyntax", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({ sqlQuery: query })
        })
            .then(response => response.json())
            .then(validateResponse => {
                if (validateResponse.isValid) {
                    return fetch("/Solution/CompareSql", {
                        method: "POST",
                        headers: { "Content-Type": "application/json" },
                        body: JSON.stringify({ taskId: taskId, sqlQuery: query })
                    });
                } else {
                    showAlertMessage(false, "Ошибка в SQL: " + validateResponse.error);
                    displayErrorResult(validateResponse.error);
                    throw new Error("Invalid SQL");
                }
})
            .then(async response => {
                if (!response.ok) {
                    const errorText = await response.text();
                    showAlertMessage(false, errorText);
                    displayErrorResult(errorText);
                    throw new Error(errorText);
                }
                return response.json();
            })
            .then(compareResponse => {
                if (compareResponse.dataIsEqual) {
                    showAlertMessage(true, "Ответ верный!");
                } else {
                    showAlertMessage(false, "Ответ неверный!");
                }
                displayResultTables(compareResponse);
            })
            .catch(error => {
                console.error('Ошибка:', error);
                if (!error.message.includes("Invalid SQL")) {
                    showAlertMessage(false, "Произошла ошибка при выполнении запроса");
                }
            });
    });

    function displayResultTables(compareResponse) {
        const queryData1 = compareResponse.queryData1 || [];
        const queryData2 = compareResponse.queryData2 || [];

        const tableHeaders1 = Object.keys(queryData1[0] || {}).map(key => `<th>${key}</th>`).join('');
        const tableHeaders2 = Object.keys(queryData2[0] || {}).map(key => `<th>${key}</th>`).join('');

        const queryData1Rows = queryData1
            .map(row => `<tr>${Object.values(row).map(value => `<td>${value}</td>`).join('')}</tr>`)
            .join('');

        const queryData2Rows = queryData2
            .map(row => `<tr>${Object.values(row).map(value => `<td>${value}</td>`).join('')}</tr>`)
            .join('');

        document.getElementById('query-result').innerHTML = `
                <h5>Результат:</h5>
                <div class="responsive-table">
                    <table class="highlight">
                        <thead>
                            <tr>${tableHeaders1}</tr>
                        </thead>
                        <tbody>${queryData1Rows}</tbody>
                    </table>
                </div>
            `;

        document.getElementById('expected-result').innerHTML = `
                <h5>Ожидаемый результат:</h5>
                <div class="responsive-table">
                    <table class="highlight">
                        <thead>
                            <tr>${tableHeaders2}</tr>
                        </thead>
                        <tbody>${queryData2Rows}</tbody>
                    </table>
                </div>
            `;
    }

    function displayErrorResult(error) {
        document.getElementById('query-result').innerHTML = `
                <h5>Ошибка:</h5>
                <div class="card-panel red lighten-4">
                    ${error}
                </div>
            `;
    }

    function showAlertMessage(isSuccess, message) {
        M.toast({
            html: message,
            classes: isSuccess ? 'green' : 'red',
            displayLength: 4000
        });
    }

    // Обновляем размеры редактора после загрузки
    document.addEventListener('DOMContentLoaded', function() {
        setTimeout(function() {
            editor.refresh();
        }, 100);
    });
</script>
}

<script type="module">
    import mermaid from 'https://cdn.jsdelivr.net/npm/mermaid@10/dist/mermaid.esm.min.mjs';
    
    // Инициализация Mermaid
    mermaid.initialize({ 
        startOnLoad: false,
        theme: 'default',
        er: {
            diagramPadding: 20,
            layoutDirection: 'TB'
        }
    });

    // Инициализация модального окна
    document.addEventListener('DOMContentLoaded', function() {
        var modal = M.Modal.init(document.getElementById('diagram-modal'), {
            onOpenEnd: function() {
                // Рендерим диаграмму при открытии модального окна
                mermaid.init(undefined, '.mermaid');
            }
        });

        // Обработчик кнопки для показа модального окна
        document.getElementById('show-diagram-btn').addEventListener('click', function() {
            modal.open();
        });
    });
</script>